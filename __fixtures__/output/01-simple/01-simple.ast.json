{
  "type": "File",
  "errors": [],
  "program": {
    "type": "Program",
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "specifiers": [
          {
            "type": "ImportNamespaceSpecifier",
            "local": {
              "type": "Identifier",
              "name": "React"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "value": "react"
        }
      },
      {
        "type": "ImportDeclaration",
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "useState"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "useState"
            }
          },
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "useRef"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "useRef"
            }
          },
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "useEffect"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "useEffect"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "extra": {
            "rawValue": "@genomoic/stubs",
            "raw": "'react'"
          },
          "value": "react"
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "CounterComponent"
            },
            "property": {
              "type": "Identifier",
              "name": "defaultProps"
            },
            "computed": false,
            "optional": null
          },
          "right": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "ObjectProperty",
                "method": false,
                "key": {
                  "type": "Identifier",
                  "name": "myDefaultProp1"
                },
                "computed": false,
                "shorthand": false,
                "value": {
                  "type": "StringLiteral",
                  "extra": {
                    "rawValue": "hello world!",
                    "raw": "'hello world!'"
                  },
                  "value": "hello world!"
                }
              }
            ]
          },
          "trailingComments": [],
          "leadingComments": [],
          "innerComments": []
        }
      },
      {
        "type": "ExportDefaultDeclaration",
        "exportKind": "value",
        "declaration": {
          "type": "FunctionDeclaration",
          "id": {
            "type": "Identifier",
            "name": "CounterComponent"
          },
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "inputRef"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useRef"
                      },
                      "arguments": [
                        {
                          "type": "NullLiteral"
                        }
                      ],
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSTypeReference",
                            "typeName": {
                              "type": "Identifier",
                              "name": "HTMLInputElement"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "count"
                        },
                        {
                          "type": "Identifier",
                          "name": "setCount"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "NumericLiteral",
                            "extra": {
                              "rawValue": 0,
                              "raw": "0"
                            },
                            "value": 0
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "prop1"
                        },
                        {
                          "type": "Identifier",
                          "name": "setProp1"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "StringLiteral",
                            "extra": {
                              "rawValue": "web",
                              "raw": "'web'"
                            },
                            "value": "web"
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ],
                "leadingComments": []
              },
              {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "prop2"
                        },
                        {
                          "type": "Identifier",
                          "name": "setProp2"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "StringLiteral",
                            "extra": {
                              "rawValue": "ibc",
                              "raw": "'ibc'"
                            },
                            "value": "ibc"
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "prop3"
                        },
                        {
                          "type": "Identifier",
                          "name": "setProp3"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "ArrayExpression",
                            "elements": []
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "prop4"
                        },
                        {
                          "type": "Identifier",
                          "name": "setProp4"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "ObjectProperty",
                                "method": false,
                                "key": {
                                  "type": "Identifier",
                                  "name": "hello"
                                },
                                "computed": false,
                                "shorthand": false,
                                "value": {
                                  "type": "StringLiteral",
                                  "extra": {
                                    "rawValue": "world!",
                                    "raw": "'world!'"
                                  },
                                  "value": "world!"
                                }
                              }
                            ]
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "isShown"
                        },
                        {
                          "type": "Identifier",
                          "name": "setIsShown"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "ArrowFunctionExpression",
                          "params": [],
                          "body": {
                            "type": "BooleanLiteral",
                            "value": false
                          },
                          "async": false,
                          "expression": null
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "hide"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "el"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "el"
                            },
                            "computed": false,
                            "property": {
                              "type": "Identifier",
                              "name": "style"
                            }
                          },
                          "computed": false,
                          "property": {
                            "type": "Identifier",
                            "name": "display"
                          }
                        },
                        "right": {
                          "type": "StringLiteral",
                          "extra": {
                            "rawValue": "none",
                            "raw": "'none'"
                          },
                          "value": "none"
                        }
                      }
                    }
                  ],
                  "directives": []
                },
                "generator": false,
                "async": false,
                "trailingComments": []
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "mycoolfunction"
                },
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "NumericLiteral",
                        "extra": {
                          "rawValue": 1,
                          "raw": "1"
                        },
                        "value": 1
                      }
                    }
                  ],
                  "directives": []
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "JSXElement",
                  "openingElement": {
                    "type": "JSXOpeningElement",
                    "name": {
                      "type": "JSXIdentifier",
                      "name": "div"
                    },
                    "attributes": [],
                    "selfClosing": false
                  },
                  "closingElement": {
                    "type": "JSXClosingElement",
                    "name": {
                      "type": "JSXIdentifier",
                      "name": "div"
                    }
                  },
                  "children": [
                    {
                      "type": "JSXText",
                      "extra": {
                        "rawValue": "\n            ",
                        "raw": "\n            "
                      },
                      "value": "\n            "
                    },
                    {
                      "type": "JSXElement",
                      "openingElement": {
                        "type": "JSXOpeningElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "button"
                        },
                        "attributes": [
                          {
                            "type": "JSXAttribute",
                            "name": {
                              "type": "JSXIdentifier",
                              "name": "css"
                            },
                            "value": {
                              "type": "JSXExpressionContainer",
                              "expression": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "ObjectProperty",
                                    "method": false,
                                    "key": {
                                      "type": "Identifier",
                                      "name": "color"
                                    },
                                    "computed": false,
                                    "shorthand": false,
                                    "value": {
                                      "type": "StringLiteral",
                                      "extra": {
                                        "rawValue": "blue",
                                        "raw": "'blue'"
                                      },
                                      "value": "blue"
                                    }
                                  }
                                ],
                                "extra": {
                                  "trailingComma": 832
                                }
                              }
                            }
                          },
                          {
                            "type": "JSXAttribute",
                            "name": {
                              "type": "JSXIdentifier",
                              "name": "onClick"
                            },
                            "value": {
                              "type": "JSXExpressionContainer",
                              "expression": {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "setCount"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "count"
                                      },
                                      "operator": "+",
                                      "right": {
                                        "type": "NumericLiteral",
                                        "extra": {
                                          "rawValue": 1,
                                          "raw": "1"
                                        },
                                        "value": 1
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ],
                        "selfClosing": false
                      },
                      "closingElement": {
                        "type": "JSXClosingElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "button"
                        }
                      },
                      "children": [
                        {
                          "type": "JSXText",
                          "extra": {
                            "rawValue": "\n                Increment\n            ",
                            "raw": "\n                Increment\n            "
                          },
                          "value": "\n                Increment\n            "
                        }
                      ]
                    },
                    {
                      "type": "JSXText",
                      "extra": {
                        "rawValue": "\n            ",
                        "raw": "\n            "
                      },
                      "value": "\n            "
                    },
                    {
                      "type": "JSXElement",
                      "openingElement": {
                        "type": "JSXOpeningElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "p"
                        },
                        "attributes": [],
                        "selfClosing": false
                      },
                      "closingElement": {
                        "type": "JSXClosingElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "p"
                        }
                      },
                      "children": [
                        {
                          "type": "JSXText",
                          "extra": {
                            "rawValue": "Count: ",
                            "raw": "Count: "
                          },
                          "value": "Count: "
                        },
                        {
                          "type": "JSXExpressionContainer",
                          "expression": {
                            "type": "Identifier",
                            "name": "count"
                          }
                        }
                      ]
                    },
                    {
                      "type": "JSXText",
                      "extra": {
                        "rawValue": "\n        ",
                        "raw": "\n        "
                      },
                      "value": "\n        "
                    }
                  ],
                  "extra": {
                    "parenthesized": true,
                    "parenStart": 740
                  }
                }
              }
            ],
            "directives": []
          }
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "declarations": [
            {
              "type": "VariableDeclarator",
              "id": {
                "type": "Identifier",
                "name": "CounterComponent2"
              },
              "init": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "inputRef"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useRef"
                            },
                            "arguments": [
                              {
                                "type": "NullLiteral"
                              }
                            ],
                            "typeParameters": {
                              "type": "TSTypeParameterInstantiation",
                              "params": [
                                {
                                  "type": "TSTypeReference",
                                  "typeName": {
                                    "type": "Identifier",
                                    "name": "HTMLInputElement"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "count"
                              },
                              {
                                "type": "Identifier",
                                "name": "setCount"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "NumericLiteral",
                                  "extra": {
                                    "rawValue": 0,
                                    "raw": "0"
                                  },
                                  "value": 0
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "const",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "var1"
                              },
                              {
                                "type": "Identifier",
                                "name": "setVar1"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "StringLiteral",
                                  "extra": {
                                    "rawValue": "web",
                                    "raw": "'web'"
                                  },
                                  "value": "web"
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ],
                      "leadingComments": []
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "const",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "var2"
                              },
                              {
                                "type": "Identifier",
                                "name": "setVar2"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "StringLiteral",
                                  "extra": {
                                    "rawValue": "ibc",
                                    "raw": "'ibc'"
                                  },
                                  "value": "ibc"
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "const",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "var3"
                              },
                              {
                                "type": "Identifier",
                                "name": "setVar3"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "ArrayExpression",
                                  "elements": []
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "const",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "var4"
                              },
                              {
                                "type": "Identifier",
                                "name": "setVar4"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "ObjectProperty",
                                      "method": false,
                                      "key": {
                                        "type": "Identifier",
                                        "name": "hello"
                                      },
                                      "computed": false,
                                      "shorthand": false,
                                      "value": {
                                        "type": "StringLiteral",
                                        "extra": {
                                          "rawValue": "world!",
                                          "raw": "'world!'"
                                        },
                                        "value": "world!"
                                      }
                                    }
                                  ]
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "VariableDeclaration",
                      "kind": "const",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ArrayPattern",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "isShown"
                              },
                              {
                                "type": "Identifier",
                                "name": "setIsShown"
                              }
                            ]
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "useState"
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "params": [],
                                "body": {
                                  "type": "BooleanLiteral",
                                  "value": false
                                },
                                "async": false,
                                "expression": null
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "FunctionDeclaration",
                      "id": {
                        "type": "Identifier",
                        "name": "hide"
                      },
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "el"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "el"
                                  },
                                  "computed": false,
                                  "property": {
                                    "type": "Identifier",
                                    "name": "style"
                                  }
                                },
                                "computed": false,
                                "property": {
                                  "type": "Identifier",
                                  "name": "display"
                                }
                              },
                              "right": {
                                "type": "StringLiteral",
                                "extra": {
                                  "rawValue": "none",
                                  "raw": "'none'"
                                },
                                "value": "none"
                              }
                            }
                          }
                        ],
                        "directives": []
                      },
                      "generator": false,
                      "async": false,
                      "trailingComments": []
                    },
                    {
                      "type": "FunctionDeclaration",
                      "id": {
                        "type": "Identifier",
                        "name": "mycoolfunction"
                      },
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setVar1"
                              },
                              "arguments": [
                                {
                                  "type": "NumericLiteral",
                                  "extra": {
                                    "rawValue": 2,
                                    "raw": "2"
                                  },
                                  "value": 2
                                }
                              ],
                              "trailingComments": [],
                              "leadingComments": [],
                              "innerComments": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "hide"
                              },
                              "arguments": [
                                {
                                  "type": "NumericLiteral",
                                  "extra": {
                                    "rawValue": 3,
                                    "raw": "3"
                                  },
                                  "value": 3
                                }
                              ],
                              "trailingComments": [],
                              "leadingComments": [],
                              "innerComments": []
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NumericLiteral",
                              "extra": {
                                "rawValue": 1,
                                "raw": "1"
                              },
                              "value": 1
                            }
                          }
                        ],
                        "directives": []
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "useEffect"
                        },
                        "arguments": [
                          {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "inputRef"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "current"
                                    },
                                    "computed": false,
                                    "optional": null,
                                    "trailingComments": [],
                                    "leadingComments": [],
                                    "innerComments": []
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "hide"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "object": {
                                                "type": "Identifier",
                                                "name": "inputRef"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "current"
                                              },
                                              "computed": false,
                                              "optional": null,
                                              "trailingComments": [],
                                              "leadingComments": [],
                                              "innerComments": []
                                            }
                                          ],
                                          "trailingComments": [],
                                          "leadingComments": [],
                                          "innerComments": []
                                        }
                                      }
                                    ],
                                    "directives": []
                                  },
                                  "alternate": null
                                }
                              ],
                              "directives": []
                            }
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "useEffect"
                        },
                        "arguments": [
                          {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "inputRef"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "current"
                                    },
                                    "computed": false,
                                    "optional": null,
                                    "trailingComments": [],
                                    "leadingComments": [],
                                    "innerComments": []
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "object": {
                                              "type": "Identifier",
                                              "name": "var3",
                                              "trailingComments": [],
                                              "leadingComments": [],
                                              "innerComments": []
                                            },
                                            "computed": false,
                                            "property": {
                                              "type": "Identifier",
                                              "name": "push"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "NumericLiteral",
                                              "extra": {
                                                "rawValue": 3,
                                                "raw": "3"
                                              },
                                              "value": 3
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "setIsShown"
                                          },
                                          "arguments": [
                                            {
                                              "type": "BooleanLiteral",
                                              "value": false
                                            }
                                          ],
                                          "trailingComments": [],
                                          "leadingComments": [],
                                          "innerComments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "hide"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "object": {
                                                "type": "Identifier",
                                                "name": "inputRef"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "current"
                                              },
                                              "computed": false,
                                              "optional": null,
                                              "trailingComments": [],
                                              "leadingComments": [],
                                              "innerComments": []
                                            }
                                          ],
                                          "trailingComments": [],
                                          "leadingComments": [],
                                          "innerComments": []
                                        }
                                      }
                                    ],
                                    "directives": []
                                  },
                                  "alternate": null
                                }
                              ],
                              "directives": []
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "useEffect"
                        },
                        "arguments": [
                          {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "generator": false,
                            "async": false,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "inputRef"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "current"
                                    },
                                    "computed": false,
                                    "optional": null,
                                    "trailingComments": [],
                                    "leadingComments": [],
                                    "innerComments": []
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "setIsShown"
                                          },
                                          "arguments": [
                                            {
                                              "type": "BooleanLiteral",
                                              "value": true
                                            }
                                          ],
                                          "trailingComments": [],
                                          "leadingComments": [],
                                          "innerComments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "hide"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "object": {
                                                "type": "Identifier",
                                                "name": "inputRef"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "current"
                                              },
                                              "computed": false,
                                              "optional": null,
                                              "trailingComments": [],
                                              "leadingComments": [],
                                              "innerComments": []
                                            }
                                          ],
                                          "trailingComments": [],
                                          "leadingComments": [],
                                          "innerComments": []
                                        }
                                      }
                                    ],
                                    "directives": []
                                  },
                                  "alternate": null
                                }
                              ],
                              "directives": []
                            }
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "inputRef"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "current"
                                },
                                "computed": false,
                                "optional": null,
                                "trailingComments": [],
                                "leadingComments": [],
                                "innerComments": []
                              },
                              {
                                "type": "Identifier",
                                "name": "var1",
                                "trailingComments": [],
                                "leadingComments": [],
                                "innerComments": []
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "JSXElement",
                        "openingElement": {
                          "type": "JSXOpeningElement",
                          "name": {
                            "type": "JSXIdentifier",
                            "name": "div"
                          },
                          "attributes": [],
                          "selfClosing": false
                        },
                        "closingElement": {
                          "type": "JSXClosingElement",
                          "name": {
                            "type": "JSXIdentifier",
                            "name": "div"
                          }
                        },
                        "children": [
                          {
                            "type": "JSXText",
                            "extra": {
                              "rawValue": "\n            ",
                              "raw": "\n            "
                            },
                            "value": "\n            "
                          },
                          {
                            "type": "JSXElement",
                            "openingElement": {
                              "type": "JSXOpeningElement",
                              "name": {
                                "type": "JSXIdentifier",
                                "name": "button"
                              },
                              "attributes": [
                                {
                                  "type": "JSXAttribute",
                                  "name": {
                                    "type": "JSXIdentifier",
                                    "name": "css"
                                  },
                                  "value": {
                                    "type": "JSXExpressionContainer",
                                    "expression": {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "ObjectProperty",
                                          "method": false,
                                          "key": {
                                            "type": "Identifier",
                                            "name": "color"
                                          },
                                          "computed": false,
                                          "shorthand": false,
                                          "value": {
                                            "type": "StringLiteral",
                                            "extra": {
                                              "rawValue": "blue",
                                              "raw": "'blue'"
                                            },
                                            "value": "blue"
                                          }
                                        }
                                      ],
                                      "extra": {
                                        "trailingComma": 2033
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "JSXAttribute",
                                  "name": {
                                    "type": "JSXIdentifier",
                                    "name": "onClick"
                                  },
                                  "value": {
                                    "type": "JSXExpressionContainer",
                                    "expression": {
                                      "type": "ArrowFunctionExpression",
                                      "id": null,
                                      "generator": false,
                                      "async": false,
                                      "params": [],
                                      "body": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "setCount"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "count"
                                            },
                                            "operator": "+",
                                            "right": {
                                              "type": "NumericLiteral",
                                              "extra": {
                                                "rawValue": 1,
                                                "raw": "1"
                                              },
                                              "value": 1
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              ],
                              "selfClosing": false
                            },
                            "closingElement": {
                              "type": "JSXClosingElement",
                              "name": {
                                "type": "JSXIdentifier",
                                "name": "button"
                              }
                            },
                            "children": [
                              {
                                "type": "JSXText",
                                "extra": {
                                  "rawValue": "\n                Increment\n            ",
                                  "raw": "\n                Increment\n            "
                                },
                                "value": "\n                Increment\n            "
                              }
                            ]
                          },
                          {
                            "type": "JSXText",
                            "extra": {
                              "rawValue": "\n            ",
                              "raw": "\n            "
                            },
                            "value": "\n            "
                          },
                          {
                            "type": "JSXElement",
                            "openingElement": {
                              "type": "JSXOpeningElement",
                              "name": {
                                "type": "JSXIdentifier",
                                "name": "p"
                              },
                              "attributes": [],
                              "selfClosing": false
                            },
                            "closingElement": {
                              "type": "JSXClosingElement",
                              "name": {
                                "type": "JSXIdentifier",
                                "name": "p"
                              }
                            },
                            "children": [
                              {
                                "type": "JSXText",
                                "extra": {
                                  "rawValue": "Count: ",
                                  "raw": "Count: "
                                },
                                "value": "Count: "
                              },
                              {
                                "type": "JSXExpressionContainer",
                                "expression": {
                                  "type": "Identifier",
                                  "name": "count"
                                }
                              }
                            ]
                          },
                          {
                            "type": "JSXText",
                            "extra": {
                              "rawValue": "\n        ",
                              "raw": "\n        "
                            },
                            "value": "\n        "
                          }
                        ],
                        "extra": {
                          "parenthesized": true,
                          "parenStart": 1941
                        }
                      }
                    }
                  ],
                  "directives": []
                }
              }
            }
          ],
          "kind": "const"
        }
      }
    ],
    "directives": [
      {
        "type": "Directive",
        "value": {
          "type": "DirectiveLiteral",
          "value": "use client"
        }
      }
    ]
  },
  "comments": []
}