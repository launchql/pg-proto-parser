{
  "type": "File",
  "errors": [],
  "program": {
    "type": "Program",
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "useState"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "useState"
            }
          },
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "useStore"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "useStore"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "extra": {
            "rawValue": "@genomoic/stubs",
            "raw": "\"@genomoic/stubs\""
          },
          "value": "@genomoic/stubs"
        }
      },
      {
        "type": "ImportDeclaration",
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "Stack"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "Stack"
            }
          },
          {
            "type": "ImportSpecifier",
            "imported": {
              "type": "Identifier",
              "name": "InputCard"
            },
            "importKind": "value",
            "local": {
              "type": "Identifier",
              "name": "InputCard"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "extra": {
            "rawValue": "../components",
            "raw": "\"../components\""
          },
          "value": "../components"
        }
      },
      {
        "type": "ExportDefaultDeclaration",
        "exportKind": "value",
        "declaration": {
          "type": "FunctionDeclaration",
          "id": {
            "type": "Identifier",
            "name": "MyComponent"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "props"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "ArrayPattern",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "name"
                        },
                        {
                          "type": "Identifier",
                          "name": "setName"
                        }
                      ]
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useState"
                      },
                      "arguments": [
                        {
                          "type": "StringLiteral",
                          "extra": {
                            "rawValue": "Steve",
                            "raw": "\"Steve\""
                          },
                          "value": "Steve"
                        }
                      ]
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "state"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "useStore"
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "ObjectProperty",
                              "method": false,
                              "key": {
                                "type": "Identifier",
                                "name": "prop1"
                              },
                              "computed": false,
                              "shorthand": false,
                              "value": {
                                "type": "NumericLiteral",
                                "extra": {
                                  "rawValue": 1,
                                  "raw": "1"
                                },
                                "value": 1
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "JSXElement",
                  "openingElement": {
                    "type": "JSXOpeningElement",
                    "name": {
                      "type": "JSXIdentifier",
                      "name": "Stack"
                    },
                    "attributes": [],
                    "selfClosing": false
                  },
                  "closingElement": {
                    "type": "JSXClosingElement",
                    "name": {
                      "type": "JSXIdentifier",
                      "name": "Stack"
                    }
                  },
                  "children": [
                    {
                      "type": "JSXText",
                      "extra": {
                        "rawValue": "\n            ",
                        "raw": "\n            "
                      },
                      "value": "\n            "
                    },
                    {
                      "type": "JSXElement",
                      "openingElement": {
                        "type": "JSXOpeningElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "InputCard"
                        },
                        "attributes": [],
                        "selfClosing": false
                      },
                      "closingElement": {
                        "type": "JSXClosingElement",
                        "name": {
                          "type": "JSXIdentifier",
                          "name": "InputCard"
                        }
                      },
                      "children": [
                        {
                          "type": "JSXText",
                          "extra": {
                            "rawValue": "\n                ",
                            "raw": "\n                "
                          },
                          "value": "\n                "
                        },
                        {
                          "type": "JSXElement",
                          "openingElement": {
                            "type": "JSXOpeningElement",
                            "name": {
                              "type": "JSXIdentifier",
                              "name": "input"
                            },
                            "attributes": [
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "css"
                                },
                                "value": {
                                  "type": "JSXExpressionContainer",
                                  "expression": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "ObjectProperty",
                                        "method": false,
                                        "key": {
                                          "type": "Identifier",
                                          "name": "color"
                                        },
                                        "computed": false,
                                        "shorthand": false,
                                        "value": {
                                          "type": "StringLiteral",
                                          "extra": {
                                            "rawValue": "red",
                                            "raw": "\"red\""
                                          },
                                          "value": "red"
                                        }
                                      }
                                    ],
                                    "extra": {
                                      "trailingComma": 389
                                    }
                                  }
                                }
                              },
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "value"
                                },
                                "value": {
                                  "type": "JSXExpressionContainer",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                }
                              },
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "onChange"
                                },
                                "value": {
                                  "type": "JSXExpressionContainer",
                                  "expression": {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "generator": false,
                                    "async": false,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "event"
                                      }
                                    ],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "object": {
                                                "type": "Identifier",
                                                "name": "state"
                                              },
                                              "computed": false,
                                              "property": {
                                                "type": "Identifier",
                                                "name": "prop1"
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "left": {
                                                "type": "MemberExpression",
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "state"
                                                },
                                                "computed": false,
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "prop1"
                                                }
                                              },
                                              "operator": "+",
                                              "right": {
                                                "type": "NumericLiteral",
                                                "extra": {
                                                  "rawValue": 1,
                                                  "raw": "1"
                                                },
                                                "value": 1
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "object": {
                                                "type": "Identifier",
                                                "name": "console"
                                              },
                                              "computed": false,
                                              "property": {
                                                "type": "Identifier",
                                                "name": "log"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "StringLiteral",
                                                "extra": {
                                                  "rawValue": "hi",
                                                  "raw": "'hi'"
                                                },
                                                "value": "hi"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "setName"
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "computed": false,
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "target"
                                                  }
                                                },
                                                "computed": false,
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "BooleanLiteral",
                                            "value": true
                                          }
                                        }
                                      ],
                                      "directives": []
                                    }
                                  }
                                }
                              }
                            ],
                            "selfClosing": true
                          },
                          "closingElement": null,
                          "children": []
                        },
                        {
                          "type": "JSXText",
                          "extra": {
                            "rawValue": "\n            ",
                            "raw": "\n            "
                          },
                          "value": "\n            "
                        }
                      ]
                    },
                    {
                      "type": "JSXText",
                      "extra": {
                        "rawValue": "\n            Hello! I can run in React, Vue, Solid, or Liquid!\n        ",
                        "raw": "\n            Hello! I can run in React, Vue, Solid, or Liquid!\n        "
                      },
                      "value": "\n            Hello! I can run in React, Vue, Solid, or Liquid!\n        "
                    }
                  ],
                  "extra": {
                    "parenthesized": true,
                    "parenStart": 261
                  }
                }
              }
            ],
            "directives": []
          }
        }
      }
    ],
    "directives": []
  },
  "comments": []
}